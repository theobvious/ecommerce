{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/admin/admin.component.css","webpack:///./src/app/components/admin/admin.component.html","webpack:///./src/app/components/admin/admin.component.ts","webpack:///./src/app/components/admin/products/addproduct/addproduct.component.css","webpack:///./src/app/components/admin/products/addproduct/addproduct.component.html","webpack:///./src/app/components/admin/products/addproduct/addproduct.component.ts","webpack:///./src/app/components/admin/products/editproduct/editproduct.component.css","webpack:///./src/app/components/admin/products/editproduct/editproduct.component.html","webpack:///./src/app/components/admin/products/editproduct/editproduct.component.ts","webpack:///./src/app/components/admin/products/products.component.css","webpack:///./src/app/components/admin/products/products.component.html","webpack:///./src/app/components/admin/products/products.component.ts","webpack:///./src/app/components/cart/cart.component.css","webpack:///./src/app/components/cart/cart.component.html","webpack:///./src/app/components/cart/cart.component.ts","webpack:///./src/app/components/cart/checkout/checkout.component.css","webpack:///./src/app/components/cart/checkout/checkout.component.html","webpack:///./src/app/components/cart/checkout/checkout.component.ts","webpack:///./src/app/components/shop/category/category.component.css","webpack:///./src/app/components/shop/category/category.component.html","webpack:///./src/app/components/shop/category/category.component.ts","webpack:///./src/app/components/shop/shop.component.css","webpack:///./src/app/components/shop/shop.component.html","webpack:///./src/app/components/shop/shop.component.ts","webpack:///./src/app/components/user/login/login.component.css","webpack:///./src/app/components/user/login/login.component.html","webpack:///./src/app/components/user/login/login.component.ts","webpack:///./src/app/components/user/register/register.component.css","webpack:///./src/app/components/user/register/register.component.html","webpack:///./src/app/components/user/register/register.component.ts","webpack:///./src/app/dateFormat.pipe.ts","webpack:///./src/app/models/order.ts","webpack:///./src/app/models/product.ts","webpack:///./src/app/models/user.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/cart.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".navigation {\\r\\n    background-color: #f2f5f9;\\r\\n    opacity: 70%;\\r\\n    height: 70px;\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    align-content: center;\\r\\n    align-items: center; \\r\\n}\\r\\n\\r\\n.right-block {\\r\\n    margin-left: auto;\\r\\n}\\r\\n\\r\\n.nav-item {\\r\\n    margin: 5px;\\r\\n}\"","module.exports = \"<div class=\\\"navigation\\\">\\r\\n    <img src=\\\"../assets/express-shop-logo-01-.jpg\\\" height=\\\"50px\\\" routerLink=\\\"/\\\">\\r\\n   ברוכים הבאים לחנות \\r\\n    <div class=\\\"right-block\\\">\\r\\n        <button class=\\\"btn btn-secondary nav-item\\\" (click)=adminBtn()>ניהול</button>\\r\\n        <button *ngIf=\\\"loggedIn\\\" class=\\\"btn btn-secondary nav-item\\\" (click)=logOutBtn()>יציאה</button>\\r\\n        <fa name=\\\"shopping-cart\\\" class=\\\"nav-item\\\" routerLink=\\\"/cart\\\"></fa>\\r\\n    </div>\\r\\n</div>\\r\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from './services/user.service';\nimport { UUID } from 'angular2-uuid';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  {\n  id: string;\n  loggedIn: boolean = false;\n\n  constructor (private userservice: UserService) { }\n\n  ngOnInit() {\n    this.start();\n  }\n    \n  start(){\n      this.userservice.isLoggedIn.subscribe(res => {\n        this.loggedIn = res;\n      });\n      this.id=UUID.UUID();\n      sessionStorage.setItem('id', this.id);\n\n    }\n\n  adminBtn():void {\n    if(this.loggedIn==true){\n      window.location.replace(\"/admin\");\n    } else window.location.replace(\"/login\");\n  }\n\n  logOutBtn():void {\n    this.userservice.logOut().subscribe(res =>{\n      window.location.replace(\"/\")\n    }) \n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule, RouteReuseStrategy, ActivatedRouteSnapshot, DetachedRouteHandle } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { APP_BASE_HREF, CommonModule } from '@angular/common';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\n\nimport { AuthGuard } from './services/auth-guard.service';\nimport { DataService } from './services/data.service';\nimport { UserService } from './services/user.service';\nimport { CartService } from './services/cart.service';\nimport { DateFormatPipe } from './dateFormat.pipe';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { RegisterComponent } from './components/user/register/register.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { ProductsComponent } from './components/admin/products/products.component';\nimport { AddProductComponent } from './components/admin/products/addproduct/addproduct.component';\nimport { EditProductComponent } from './components/admin/products/editproduct/editproduct.component';\nimport { ShopComponent } from './components/shop/shop.component';\nimport { CategoryComponent } from './components/shop/category/category.component';\nimport { CartComponent } from './components/cart/cart.component';\nimport { CheckoutComponent } from './components/cart/checkout/checkout.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'shop', pathMatch: 'full'},\n  {path: 'find', redirectTo: 'search'},\n  {path: 'login', component: LoginComponent},\n  {path: 'admin', component: AdminComponent,  canActivate: [AuthGuard]},\n  {path: 'products', component: ProductsComponent,\n      children: [\n        {path: 'editproduct/:id', component: EditProductComponent},\n        {path: 'addproduct', component: AddProductComponent}\n      ]\n  },\n  {path: 'register', component: RegisterComponent},\n  {path: 'cart', component: CartComponent},\n  {path: 'checkout', component: CheckoutComponent},\n  {\n    path: 'shop',\n    component: ShopComponent,\n    children: [\n      {path: 'category/:category', component: CategoryComponent}\n    ]\n  },\n];\n\nexport class MyRouteReuseStrategy implements RouteReuseStrategy {\n\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): boolean {\n    return false;\n  }\n\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\n    return false;\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    AdminComponent,\n    ShopComponent,\n    CategoryComponent,\n    CartComponent,\n    ProductsComponent,\n    AddProductComponent,\n    EditProductComponent,\n    CheckoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    RouterModule.forRoot(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    AngularFontAwesomeModule\n  ],\n  providers: [DataService, CartService, UserService, AuthGuard, DateFormatPipe, \n    {provide: APP_BASE_HREF, useValue : '/' },\n    {provide: RouteReuseStrategy, useClass: MyRouteReuseStrategy}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"m-3\\\" id=\\\"header\\\">\\n  <h1>ניהול החנות</h1>\\n<a [routerLink]=\\\"['/products']\\\">לניהול מוצרים</a> \\n  <h2>הזמנות</h2>\\n  <ul *ngIf=\\\"orders\\\">\\n    <li *ngFor=\\\"let order of orders\\\"> {{order.name}}<br>\\n      {{order.products}}<br>\\n      טלפון ליצירת קשר: {{order.phone}}<br>\\n    </li>\\n  </ul>\\n</div>\\n\"","import { DataService } from './../../services/data.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  orders: any;\n  \n  constructor(private getdata: DataService) { }\n\n  ngOnInit() {\n    this.getorders();\n  }\n\n  getorders() {\n    this.getdata.getOrders()\n      .subscribe (res => {\n        this.orders = res.json();\n        console.log(this.orders);\n      });\n  }\n\n}\n","module.exports = \"#addform {\\r\\n    -ms-grid-row-align: center;\\r\\n        align-self: center;\\r\\n    background-color: rgb(255,255,255,0.6);\\r\\n    padding: 10px;\\r\\n}\"","module.exports = \"<div id=\\\"addform\\\">\\n  <h3>הוספת מוצר חדש</h3>\\n  <form novalidate (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\" encType=\\\"multipart/form-data\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>שם </label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"newProduct.name\\\" required #name=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid': name.invalid && (name.dirty || name.touched)}\\\">\\n      <div *ngIf=\\\"name.invalid && name.touched\\\" class=\\\"invalid-feedback\\\">\\n        מהו שם המוצר?\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>מחיר </label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"price\\\" [(ngModel)]=\\\"newProduct.price\\\" required #price=\\\"ngModel\\\"\\n        [ngClass]=\\\"{'is-invalid': price.invalid && price.touched}\\\">\\n      <div *ngIf=\\\"price.invalid && price.touched\\\" class=\\\"invalid-feedback\\\">\\n        חובה למלא שדה זה\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>הוספת תמונה </label>\\n      <input type=\\\"file\\\" name=\\\"newimg\\\" #newimg (change)=\\\"newFile($event.target.files)\\\"/>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>קטגוריה </label>\\n      <select class=\\\"form-control\\\" name=\\\"category\\\" [(ngModel)]=\\\"newProduct.category\\\">\\n        <option value=\\\"\\\" selected disabled hidden>בחירת קטגוריה</option>\\n        <option *ngFor=\\\"let cat of categories\\\">\\n          {{cat.category}}\\n        </option>\\n      </select>\\n    </div>\\n\\n    <div>\\n      <button type=\\\"submit\\\" [disabled]=\\\"f.invalid\\\" class=\\\"btn btn-primary\\\">\\n        להוסיף מוצר\\n      </button>\\n    </div>\\n  </form>\\n  <div>{{message}}</div>\\n</div>\\n\"","import { AdminComponent } from './../../admin.component';\nimport { product } from './../../../../models/product';\nimport { DataService } from './../../../../services/data.service';\nimport { Component, OnInit, ViewChild, Host } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-addproduct',\n  templateUrl: './addproduct.component.html',\n  styleUrls: ['./addproduct.component.css']\n})\nexport class AddProductComponent implements OnInit {\n  @ViewChild('f') form: any;\n  @ViewChild('newimg') file;\n  categories:any;\n  fileToUpload:File;\n  newProduct: product = new product(0, '', 0, '', '', 0);\n  message:string;\n\n  constructor(private getdata: DataService, private router: Router) { }\n\n  ngOnInit() {\n    this.getdata.getCategories()\n      .subscribe(res=> {\n        this.categories = res.json();\n      })\n  }\n\n newFile(files: FileList) {\n  this.fileToUpload = files.item(0);\n}\n \nonSubmit() {\n    this.message = '';\n    this.getdata.upload(this.fileToUpload)\n      .subscribe(res=>{\n        this.newProduct.img = res.json();\n        this.sendInfo();\n      });\n  }\n\n  sendInfo() {\n    this.getdata.sendProduct(this.newProduct)\n    .subscribe(res=> {\n      this.message = \"Added successfully!\";\n      this.form.reset();\n    });\n  }\n}","module.exports = \".preview {\\r\\n    height: 200px;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"product\\\">\\n    <h2>{{product.name}}</h2>\\n    <div>\\n      <label>שם:\\n        <input [(ngModel)]=\\\"product.name\\\" placeholder=\\\"name\\\"/>\\n      </label>\\n      </div>\\n      <div>\\n      <label>מחיר:\\n        <input [(ngModel)]=\\\"product.price\\\" placeholder=\\\"price\\\"/>\\n      </label>\\n      </div>\\n      <div>\\n        ניתן להוסיף קישור לתמונה חדשה.\\n      <label>תמונה:\\n        <input [(ngModel)]=\\\"product.img\\\" placeholder=\\\"image link\\\"/>\\n      </label>\\n      </div>\\n      <div>\\n        <img src=\\\"{{product.img}}\\\" class=\\\"preview\\\">\\n      </div>\\n      <div>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"editProduct(product)\\\">שמירת שינויים</button>\\n      </div>\\n  </div>\"","import { product } from './../../../../models/product';\nimport { DataService } from './../../../../services/data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-editproduct',\n  templateUrl: './editproduct.component.html',\n  styleUrls: ['./editproduct.component.css']\n})\nexport class EditProductComponent implements OnInit {\n\n  product: any;\n  id: any;\n\n  constructor(private getdata: DataService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((routeParams: ParamMap) => {\n      this.getProduct(routeParams);\n    });\n  }\n\n  getProduct(routeParams: ParamMap): void {\n    this.id = +(routeParams.get('id'))\n    this.getdata.getProduct({id: this.id})\n      .subscribe(res => {\n        this.product = res.json();\n      });\n  }\n\n  editProduct(product) {\n    this.getdata.editProduct(product)\n      .subscribe(res => {\n        console.log('OK');\n      })\n  };\n\n  refresh(): void {\n    this.router.navigated = false;\n    this.router.navigate([\"/\", this.id]);\n  }\n}\n","module.exports = \"#list {\\r\\n    background-color: rgb(255,255,255,0.6);\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n#header {\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"header\\\">\\n    <a [routerLink]=\\\"['admin']\\\">חזרה לניהול הזמנות</a>.\\n  <h3> .ברוכים הבאים. כאן תנהלו את המלאי וההזמנות. על מנת לערוך מוצר יש ללחוץ על שמו\\n    <br>\\n   <a [routerLink]=\\\"['addproduct']\\\">הוספת מוצר חדש</a>.</h3>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n      <div id=\\\"list\\\" class=\\\"col-4\\\">\\n          <div *ngIf=\\\"products\\\">\\n              <ul class=\\\"list-group\\\">\\n                <li class=\\\"list-group-item\\\" *ngFor=\\\"let product of products\\\">\\n                    <a [routerLink]=\\\"['editproduct/' + product.id]\\\"> {{product.name}} </a>\\n                </li>\\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n      <div id=\\\"edit\\\" class=\\\"col-8\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n  </div>\\n\"","import { UserService } from './../../../services/user.service';\nimport { DataService } from './../../../services/data.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n  products: any;\n  categories: any;\n  name: string;\n\n  constructor(private getdata: DataService, private userservice: UserService) { }\n\n  ngOnInit() {\n    this.name = sessionStorage.getItem('name');\n    this.getcategories();\n    this.getproducts();\n  }\n  \n  getcategories() {\n    this.getdata.getCategories()\n      .subscribe(\n        res => {\n          this.categories = res.json();\n        }\n      )\n  }\n\n  getproducts() {\n    this.getdata.getAllProducts()\n      .subscribe(\n        res => {\n          this.products = res.json();\n        });\n  }\n}\n","module.exports = \"#cart {\\r\\n    width: 30%;\\r\\n    -ms-grid-row-align: center;\\r\\n        align-self: center;\\r\\n    background-color: rgb(255,255,255,0.6);\\r\\n    padding: 10px;\\r\\n}\"","module.exports = \"<div id=\\\"cart\\\" class=\\\"container mt-4\\\">\\r\\n    <div>\\r\\n        <h4>חיפוש בעגלה:</h4>\\r\\n        <label>הכניסו שם מוצר או חלק ממנו:</label>\\r\\n        <input [(ngModel)]=\\\"searchstring\\\" (keyup)=\\\"filterList()\\\">\\r\\n    </div>\\r\\n    <br>\\r\\n    <h3>בעגלה שלכם:</h3>\\r\\n    <div>\\r\\n        <ul class=\\\"list-group\\\">\\r\\n            <li class=\\\"list-group-item\\\" *ngFor=\\\"let product of cart\\\">\\r\\n                {{product.name}} ({{product.quantity}}) <button class=\\\"btn btn-info\\\" (click)=\\\"removeFromCart(product)\\\"><fa name=\\\"minus-square\\\"></fa></button>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div>סך הכל לתשלום: {{total}}</div>\\r\\n    <div>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button class=\\\"btn btn-secondary\\\" (click)=goShop()>להמשיך קניות</button>\\r\\n        <button class=\\\"btn btn-secondary\\\" (click)=checkOut()>לשלוח הזמנה</button>\\r\\n    </div>\\r\\n</div>\"","import { product } from '../../models/product';\nimport { CartService } from './../../services/cart.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cart', \n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\n\nexport class CartComponent implements OnInit {\n  cart: product[];\n  cartCopy: product[];\n  total: number;\n  searchstring: string;\n\n    constructor(private cartservice: CartService, private router: Router) {}\n\n    ngOnInit() { \n        this.cartservice.cartSubject\n          .subscribe(res=>{\n            this.cart = res.products;\n            this.cartCopy = this.cart;\n            this.total = res.totalPrice;\n          });\n    }\n\n    filterList() {\n        let str = this.searchstring;\n        this.cart = this.cartCopy.filter(item => item.name.indexOf(str) !== -1);\n    }\n\n    removeFromCart(product) {\n      this.cartservice\n        .removeProduct(product);\n    }\n\n    goShop() {\n      this.router.navigate(['/shop']);\n    }\n\n    checkOut() {\n      this.router.navigate(['/checkout']);\n    }\n}","module.exports = \"#incart, #checkoutform, #done {\\r\\n    width: 60%;\\r\\n    -ms-grid-row-align: center;\\r\\n        align-self: center;\\r\\n    background-color: rgb(255,255,255,0.6);\\r\\n    padding: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div  class=\\\"container mt-4\\\" id=\\\"incart\\\" *ngIf=\\\"filling\\\">\\n  <div *ngIf=\\\"cart\\\">\\n    <h4>בעגלה שלכם:</h4>\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\" *ngFor=\\\"let product of cart\\\">\\n        {{product.name}} ({{product.quantity}})\\n      </li>\\n    </ul>\\n    <h4>סך הכל: {{order.total}}</h4>\\n    <button class=\\\"btn btn-secondary\\\" (click)=\\\"backToShop()\\\">להמשיך קניות</button>\\n  </div>\\n  <br><br>\\n  <div class=\\\"container mt-4\\\" id=\\\"checkoutform\\\">\\n    <form novalidate (ngSubmit)=\\\"finishShopping()\\\" #f=\\\"ngForm\\\">\\n      <legend>בבקשו מלאו פרטיכם</legend>\\n      \\n      <div class=\\\"form-group\\\">\\n        <label>שם</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"order.name\\\" required #name=\\\"ngModel\\\"\\n          [ngClass]=\\\"{'is-invalid': name.invalid && name.touched}\\\">\\n        <div *ngIf=\\\"name.invalid && name.touched\\\" class=\\\"invalid-feedback\\\">\\n          שדה השם לא יכול להיות ריק\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label>דוא\\\"ל</label>\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"order.email\\\" required #email=\\\"ngModel\\\"\\n          [ngClass]=\\\"{'is-invalid': email.invalid && email.touched}\\\">\\n        <div *ngIf=\\\"email.invalid && email.touched\\\" class=\\\"invalid-feedback\\\">\\n          נא למלא כתובת דוא\\\"ל תקינה\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label>כתובת</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"address\\\" [(ngModel)]=\\\"order.address\\\" #address=\\\"ngModel\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label>מספר טלפון</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"phone\\\" [(ngModel)]=\\\"order.phone\\\"\\n          required #phone=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid': phone.invalid && phone.touched}\\\">\\n        <div *ngIf=\\\"phone.invalid && phone.touched\\\" class=\\\"invalid-feedback\\\">\\n            נא להזין מספר טלפון כדי שנוכל ליצור איתכם קשר\\n        </div>\\n      </div>\\n\\n      <div>\\n        <button type=\\\"submit\\\" [disabled]=\\\"f.invalid || submitted\\\" class=\\\"btn btn-success btn-outline-rounded btn-info\\\">\\n          לסיים קניות\\n        </button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n<div id=\\\"done\\\" *ngIf=\\\"finished\\\" class=\\\"container mt-4\\\">\\n  תודה שקניתם! ההזמנה תמתין לכם בחנות.\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"backToShop()\\\">טוב</button>\\n</div>\\n\"","import { Order } from './../../../models/order';\nimport { User } from './../../../models/user';\nimport { product } from './../../../models/product';\nimport { DataService } from './../../../services/data.service';\nimport { CartService } from './../../../services/cart.service';\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent {\n  order: Order = new Order(0, '', '', '', '', '', '');\n  filling: boolean = true;\n  finished: boolean = false;\n\n  constructor(private cartservice: CartService, private userservice: UserService, private getdata: DataService, private router: Router) {\n    this.cartservice.cartSubject\n      .subscribe(res=>{\n        this.order.products = JSON.stringify(res.products);\n        this.order.date = res.date;\n      })\n   }\n\n  backToShop() {\n    this.router.navigate(['/shop']);\n  }\n\n  finishShopping() {\n    console.log(this.order);\n    this.cartservice.submitOrder(this.order)\n      .subscribe(res => {\n        console.log(\"Order submitted!\")\n      });\n\n    this.cartservice.resetCart();\n    this.filling = false;\n    this.finished = true;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"products\\\" class=\\\"row card-group\\\">\\n  <div class=\\\"col-4\\\" *ngFor=\\\"let product of products\\\">\\n    <div class=\\\"card m-3\\\">\\n      <img class=\\\"card-img-top\\\" src=\\\"{{product.img}}\\\" alt=\\\"משקה\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-header\\\">{{product.name}}</h5>\\n        <p class=\\\"card-title\\\">{{product.price}}</p>\\n        <div>\\n          <label>כמות: </label>\\n          <input type=\\\"number\\\" [(ngModel)]=\\\"product.quantity\\\"></div>\\n        <button (click)=\\\"addToCart(product)\\\" class=\\\"btn btn-primary\\\">להוסיף לסל\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { CartService } from './../../../services/cart.service';\nimport { product } from './../../../models/product';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { DataService } from './../../../services/data.service';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n  @Input() product : product;\n  products:any;\n  category:any;\n\n  constructor(private getdata: DataService, private cartService : CartService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((routeParams: ParamMap) => {\n      this.getproducts(routeParams);\n    });\n  }\n  \n  getproducts(routeParams: ParamMap) : void {\n    this.category = routeParams.get('category');\n    this.getdata.getProducts({category: this.category})\n    .subscribe(\n      res => {\n        this.products = res.json();\n      });\n  }\n\n  addToCart(product : product) {\n    this.cartService.addProduct(product);\n}\n}","module.exports = \"#header {\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"m-3\\\" id=\\\"header\\\">\\n    <h1>ברוכים הבאים לחנות. אנא, בחרו קטגוריית מוצרים</h1>\\n    <ul *ngIf=\\\"categories\\\">\\n      <li *ngFor=\\\"let category of categories\\\"><a [routerLink]=\\\"['category/'+category.category]\\\"> {{category.category}} </a></li>\\n    </ul>\\n</div>\\n<div class='row'>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { DataService } from './../../services/data.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shop',\n  templateUrl: './shop.component.html',\n  styleUrls: ['./shop.component.css']\n})\nexport class ShopComponent implements OnInit {\n  categories: any;\n  \n  constructor(private getdata: DataService) { }\n\n  ngOnInit() {\n    this.getcategories();\n  }\n\n  getcategories() {\n    this.getdata.getCategories()\n    .subscribe(\n      res => {\n        this.categories = res.json();\n      });\n  }\n\n}\n","module.exports = \"#loginform {\\r\\n    width: 40%;\\r\\n    -ms-grid-row-align: center;\\r\\n        align-self: center;\\r\\n    background-color: rgb(255,255,255,0.6);\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n#header {\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n}\\r\\n\"","module.exports = \"\\n<div class=\\\"container mt-4\\\" id=\\\"header\\\">\\n    <h3> כנסו לאיזור המנהלים או\\n       <a [routerLink]=\\\"['/register']\\\">הירשמו</a>.</h3>\\n</div>\\n\\n<div class=\\\"container mt-4\\\" id=\\\"loginform\\\">\\n  <form novalidate (ngSubmit)=\\\"logIn()\\\" #f=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n        <label>שם משתמש</label>\\n        <input type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          name=\\\"username\\\"\\n          [(ngModel)]=\\\"usernameModel\\\"\\n          required\\n          #username=\\\"ngModel\\\"     \\n      [ngClass]=\\\"{'is-invalid': username.invalid && (username.dirty || username.touched)}\\\">\\n        <div class=\\\"invalid-feedback\\\"\\n          *ngIf=\\\"username.errors && (username.dirty || username.touched)\\\">\\n          <p *ngIf=\\\"username.errors.required\\\">חובה להזין שם משתמש</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>ססמא</label>\\n        <input type=\\\"password\\\"\\n        class=\\\"form-control\\\"\\n        name=\\\"password\\\"\\n        [(ngModel)]=\\\"passwordModel\\\"\\n        required\\n        #password=\\\"ngModel\\\"\\n      [ngClass]=\\\"{'is-invalid': password.invalid && (password.dirty || password.touched)}\\\">\\n        <div class=\\\"invalid-feedback\\\"\\n          *ngIf=\\\"password.errors && (password.dirty || password.touched)\\\">\\n          <p *ngIf=\\\"password.errors.required\\\">חובה להזין ססמא</p>\\n        </div>\\n    </div>\\n    <button type=\\\"submit\\\"\\n      class=\\\"btn btn-primary\\\"\\n      [disabled]=\\\"f.invalid\\\">\\n    Submit\\n    </button>\\n    </form>\\n  <br/>\\n  <div id=\\\"notification\\\" [ngClass]=\\\"{'alert alert-danger': message}\\\">{{message}}</div>\\n</div>\\n\"","import { User } from './../../../models/user';\nimport { CartService } from './../../../services/cart.service';\nimport { DateFormatPipe } from './../../../dateFormat.pipe';\nimport { UserService } from './../../../services/user.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { DataService } from './../../../services/data.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  @ViewChild('f') form: any;\n  usernameModel: string;\n  passwordModel: string;\n  user: User;\n  message: any;\n  shopurl: string = '/shop';\n  adminurl: string = '/admin';\n  activecarturl: string = '/activecart';\n  currentDate: any;\n\n  constructor(private getdata: DataService, private userservice: UserService, private cartservice: CartService, public router: Router, public route: ActivatedRoute, private dateformat : DateFormatPipe) { }\n\n  ngOnInit() { \n    this.userservice.getUsers();\n    this.currentDate = this.dateformat.transform(new Date());\n   }\n\n  logIn(): void {\n    this.userservice.sendUser({username: this.usernameModel, password: this.passwordModel, date: this.currentDate})\n    .subscribe(\n        response=> { \n          sessionStorage.setItem(\"loggedIn\", \"true\");\n          sessionStorage.setItem(\"date\", this.currentDate);\n          this.user = response.json();\n          this.userservice.name = this.user.name;\n\n          this.userservice.isLoggedIn.next(true);\n          this.userservice.loggedInUser = this.user;\n\n          // if (this.user.role == \"user\") {\n          //   this.userservice.isAdmin = false;\n          // }\n          // else if (this.user.role == \"admin\") {\n          //   this.userservice.isAdmin = true;\n            this.router.navigate(['/admin']);\n         // }\n        },\n        err=> this.message=\"אירעה תקלה. תנסו שוב או הירשמו.\"\n    )\n  }\n}","module.exports = \"#registerform, #registerform2 {\\r\\n    width: 40%;\\r\\n    -ms-grid-row-align: center;\\r\\n        align-self: center;\\r\\n    background-color: rgb(255,255,255,0.6);\\r\\n    padding: 10px;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"screen1\\\" class=\\\"container mt-4\\\" id=\\\"registerform\\\">\\n    <form novalidate (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>Personal ID</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"tz\\\" [(ngModel)]=\\\"tzModel\\\" required #tz=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid': tz.invalid && (tz.dirty || tz.touched)}\\\">\\n        <div *ngIf=\\\"tz.invalid && tz.touched\\\" class=\\\"invalid-feedback\\\">\\n          ID field can't be blank\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label>Username</label>\\n        <input type=\\\"string\\\" class=\\\"form-control\\\" name=\\\"uname\\\" [(ngModel)]=\\\"unameModel\\\" required #uname=\\\"ngModel\\\"\\n          [ngClass]=\\\"{'is-invalid': uname.invalid && uname.touched}\\\">\\n        <div *ngIf=\\\"uname.invalid && uname.touched\\\" class=\\\"invalid-feedback\\\">\\n          Username field can't be blank\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label>Email</label>\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"emailModel\\\" required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"\\n          #email=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid': email.invalid && (email.dirty || email.touched)}\\\">\\n        <div *ngIf=\\\"email.invalid && email.touched\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"email.errors?.required\\\">\\n            Email field can't be blank\\n          </div>\\n          <div *ngIf=\\\"email.errors?.pattern\\\">\\n            The email must follow this pattern: name@domain.com\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label>Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"pwd\\\" [(ngModel)]=\\\"pwdModel\\\" required #pwd=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid': pwd.invalid && pwd.touched}\\\">\\n      </div>\\n      <div *ngIf=\\\"pwd.invalid && pwd.touched\\\" class=\\\"invalid-feedback\\\">\\n        Password can't be blank\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label>Confirm password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"confirm\\\" [(ngModel)]=\\\"confirmModel\\\" required #confirm=\\\"ngModel\\\"\\n          [ngClass]=\\\"{'is-invalid': (confirm.invalid && (confirm.dirty || confirm.touched)) || confirmModel!==pwdModel}\\\">\\n      </div>\\n      <div *ngIf=\\\"confirm.invalid && confirm.touched\\\" class=\\\"invalid-feedback\\\">\\n        <div *ngIf=\\\"(confirm.errors?.required && confirm.touched)\\\">\\n          Input password once again\\n        </div>\\n        <div *ngIf=\\\"confirmModel!==pwdModel\\\">\\n          Passwords must match!\\n        </div>\\n      </div>\\n      <div>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" [routerLink]=\\\"['/login']\\\">Cancel</button>\\n        <button type=\\\"submit\\\" [disabled]=\\\"f.invalid||confirmModel!==pwdModel\\\" class=\\\"btn btn-success btn-outline-rounded btn-info\\\">\\n          Next <span style=\\\"margin-left:10px;\\\">\\n            <fa name=\\\"arrow-right\\\"></fa>\\n          </span>\\n        </button>\\n      </div>\\n    </form>\\n  <div>{{message}}</div>\\n</div>\\n\\n<div *ngIf=\\\"screen2\\\" class=\\\"container mt-4\\\" id=\\\"registerform2\\\">\\n  <form novalidate (ngSubmit)=\\\"register()\\\" #b=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"nameModel\\\" required #name=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid': name.invalid && (name.dirty || name.touched)}\\\">\\n      <div *ngIf=\\\"name.invalid && name.touched\\\" class=\\\"invalid-feedback\\\">\\n        Name field can't be blank\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>City</label>\\n      <select  class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"cityModel\\\">\\n        <option *ngFor=\\\"let city of cities\\\">\\n          {{city}}\\n        </option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Street</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"street\\\" [(ngModel)]=\\\"streetModel\\\" required #street=\\\"ngModel\\\"\\n        [ngClass]=\\\"{'is-invalid': street.invalid && street.touched}\\\">\\n      <div *ngIf=\\\"street.invalid && street.touched\\\" class=\\\"invalid-feedback\\\">\\n        Street field can't be blank\\n      </div>\\n    </div>\\n\\n    <div>\\n      <button type=\\\"submit\\\" [disabled]=\\\"b.invalid || submitted\\\" class=\\\"btn btn-success btn-outline-rounded btn-info\\\">\\n        Register\\n      </button>\\n    </div>\\n  </form>\\n<div>{{message}}</div>\\n</div>\\n\"","import { User } from './../../../models/user';\nimport { UserService } from './../../../services/user.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  screen1: boolean = true;\n  screen2: boolean = false;\n\n  cities: string[] = [\n    \"London\",\n    \"Hogwarts\",\n    \"Hogsmeade\",\n    \"The Burrow\",\n    \"Godric's Hollow\",\n    \"Little Hangleton\",\n    \"Spinner's End\",\n    \"Forest of Dean\"\n  ]\n\n  nameModel: string;\n  unameModel: string;\n  emailModel: string;\n  pwdModel: string;\n  confirmModel: string;\n  tzModel: number;\n  cityModel: string;\n  streetModel: string;\n  messageCode: any;\n  newUser: User;\n  submitted: boolean = false;\n\n  constructor(private userservice: UserService) {}\n\n  onSubmit() {\n    //why is it needing a double click??\n    this.userservice.checkUser({tz: this.tzModel})\n      .subscribe(res => {\n        this.messageCode=res.json();\n      });\n    if (this.messageCode == 1) {\n      alert(\"Error: a user with such an ID is already registered in the system!\");\n      return;\n    } else if (this.messageCode == 2) {\n      this.screen1 = false;\n      this.screen2 = true;\n    }\n  }\n\n  backToLogin() {\n    window.location.replace('/');\n  }\n \n  register() {\n    this.newUser = new User(\n      this.nameModel,\n      this.emailModel,\n      \"user\", \n      this.cityModel,\n      this.streetModel,\n      this.unameModel,\n      this.pwdModel,\n      this.tzModel,\n    );\n    this.submitted = true;\n    this.userservice.registerUser(this.newUser)\n      .subscribe(res=>{\n        window.location.replace('/');\n      });\n  }\n}","import { Pipe, PipeTransform} from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Pipe({\r\n    name: 'dateFormat'\r\n  })\r\n  export class DateFormatPipe extends DatePipe implements PipeTransform {\r\n    transform(value: any, args?: any): any {\r\n       return super.transform(value, \"yyyy-MM-dd\");\r\n    }\r\n  }","import { product } from './product';\r\n\r\nexport class Order {\r\n    constructor(\r\n        public id : number, \r\n        public date : any,\r\n        public name : string, \r\n        public email : string,\r\n        public address : string,\r\n        public phone : string,\r\n        public products : string\r\n    ) {}\r\n}","export class product {\r\n    constructor(\r\n        public id : number,\r\n        public name : string, \r\n        public price : number, \r\n        public img : string, \r\n        public category : string,\r\n        public quantity : number\r\n    ) {}\r\n}","export class User {\r\n    constructor(\r\n        public name : string, \r\n        public email : string,\r\n        public role : string, \r\n        public city : string,\r\n        public street : string, \r\n        public username : string,\r\n        public password : string,\r\n        public tz : number\r\n    ) {}\r\n}","import { Injectable }       from '@angular/core';\r\nimport {\r\n  CanActivate, Router,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private userservice: UserService, private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    return this.checkAdmin();\r\n  }\r\n\r\n  checkAdmin(): boolean {\r\n    if (this.userservice.checkLoggedIn()) {\r\n          return true;\r\n        } else {\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n    }\r\n  }\r\n  \r\n}","import { product } from '../models/product';\r\nimport { CartState } from '../models/cartState';\r\n\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Observable, Subject, of, BehaviorSubject } from 'rxjs';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable()\r\nexport class CartService {\r\n  id : any;\r\n  today : any;\r\n  cartSubject = new BehaviorSubject<CartState>({id: this.id, products: [], totalPrice: 0, date: this.today});\r\n  products : product[] = [];\r\n  totalPrice : number = 0;\r\n\r\n  constructor(private http : Http, private userservice : UserService) { \r\n    this.id = sessionStorage.getItem('id');\r\n    this.today = sessionStorage.getItem('date');\r\n    console.log(this.today);\r\n    \r\n   }\r\n\r\n    addProduct(product:product) {\r\n      var inCart = this.checkInCart(product.name);\r\n      if (inCart == null){\r\n        this.products.push(product);\r\n        var a = this.products.indexOf(product);\r\n      }\r\n      else {\r\n        inCart.quantity += product.quantity;\r\n      }\r\n      this.totalPrice += (product.price*product.quantity);\r\n      this.cartSubject.next(<CartState>{id: this.id, products: this.products, totalPrice: +this.totalPrice, date: this.today});\r\n    }\r\n\r\n    checkInCart(name:string) {\r\n      for(var i=0; i< this.products.length; i++) {\r\n        if(this.products[i].name === name){\r\n            return this.products[i];\r\n        }\r\n      }\r\n        return null;\r\n    }\r\n\r\n    sendCart(data) {\r\n      this.http.post('/product', data).subscribe(res => console.log(res));\r\n    }\r\n\r\n    removeProduct(product) {\r\n      var inCart = this.checkInCart(product.name);\r\n      if (inCart !== null) {\r\n        inCart.quantity -= 1;\r\n        if (inCart.quantity == 0) {\r\n          this.products = this.products.filter(item => item !== product);\r\n        }\r\n      }\r\n      this.totalPrice -= +product.price;\r\n      this.cartSubject.next(<CartState>{id: this.id, products: this.products, totalPrice: +this.totalPrice, date: this.today});\r\n      \r\n      if (this.products.length < 1) {\r\n        this.resetCart();\r\n      } else {\r\n        this.sendCart({products: JSON.stringify(this.products), date: this.today});\r\n      };\r\n    }\r\n\r\n    getAllProducts() {\r\n      return this.cartSubject;\r\n    }\r\n\r\n    fetchCartContents() : Observable<any>{\r\n      return this.http.get('/cartproducts');\r\n    }\r\n\r\n    submitOrder(data): Observable<any> {\r\n      return this.http.post('/order', data);\r\n    }\r\n\r\n    resetCart() {\r\n      this.products = [];\r\n      this.totalPrice = 0;\r\n      this.cartSubject.next(<CartState>{id: this.id, products: this.products, totalPrice: +this.totalPrice, date: this.today})\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Http, Response } from '@angular/http';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  constructor(private http: Http) { }\n\ngetAllProducts(): Observable<any> {\n  return this.http.get('/getallproducts');\n}\n\n  getProducts(category): Observable<any> {\n    return this.http.post('/getproducts', category);\n  }\n\n  getProduct(id): Observable<any> {\n    return this.http.post('/getproduct', id);\n  }\n\n  getCategories(): Observable<any> {\n    return this.http.get('/getcategories');\n  }\n\n  getOrders(): Observable<any> {\n    return this.http.get('/getorders');\n  }\n\n  editProduct(product): Observable<any> {\n    return this.http.post('/editproduct', product);\n  }\n\n  upload(uploading: File) : Observable<any> {  \n    let data = new FormData();\n    data.set('fileKey', uploading, uploading.name);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'image/jpg'    \n      })\n    };\n    return this.http.post('/upload', data);\n  }\n\n  sendProduct(product): Observable<any> {\n    return this.http.post('/sendproduct', product);\n  }\n}","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { Http, Response } from '@angular/http';\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\nconstructor(private http: Http) { }\r\n\r\n loggedInUser: User;\r\n username:any = new Subject();\r\n isLoggedIn = new Subject<boolean>();\r\n// isAdmin:boolean = false;\r\n\r\n set name(value) {\r\n   this.username.next(value);\r\n   sessionStorage.setItem('name', value);\r\n }\r\n\r\n get name() {\r\n   return sessionStorage.getItem('name');\r\n }\r\n\r\n getLoggedInUser(): User {\r\n  return this.loggedInUser;\r\n}\r\n\r\ncheckLoggedIn() {\r\n  return this.isLoggedIn;\r\n}\r\n\r\nsendUser(userData): Observable<any> {\r\n  return this.http.post('/user', userData);\r\n}\r\n\r\ncheckUser(tz): Observable<any> {\r\n  return this.http.post('/checkexist', tz);\r\n}\r\n\r\nregisterUser(userData): Observable<any>{\r\n  return this.http.post('/newuser', userData);\r\n}\r\n\r\ngetUsers(): Observable<any> {\r\n  return this.http.get('/users');\r\n}\r\n\r\nlogOut(): Observable<any> {\r\n  this.isLoggedIn.next(false);\r\n // this.isAdmin = false;\r\n  this.loggedInUser = null;\r\n  sessionStorage.clear();\r\n  \r\n  return this.http.post('/logout', null);\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}